{
	"info": {
		"_postman_id": "2015ab5b-76bf-4e08-9b81-51ec4b7f4447",
		"name": "HW_2_EP_1_first_TESTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18525895"
	},
	"item": [
		{
			"name": "http://162.55.220.72:5005/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": "This is the first responce from server!"
		}
	],
	
	"info": {
		"_postman_id": "341fcc78-3d55-44fd-84e4-c3d646a74ba0",
		"name": "HW_2_EP_2_object_info_3_TESTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18525895"
	},
	"item": [
		{
			"name": "http://162.55.220.72:5005/user_info_3?name=Kot_kokos&age=29&salary=700",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"\r",
							"let name_resp = response.name;\r",
							"pm.test(\"Check name response = name request\", function() {\r",
							"    pm.expect(name_resp).to.eql(\"Leonardo\")\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"\r",
							"let age_resp = response.age;\r",
							"pm.test(\"Check age response = age request\", function() {\r",
							"    pm.expect(age_resp).to.eql(\"29\")\r",
							"});\r",
							"console.log(typeof(response.age));\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"\r",
							"let salary_resp = response.salary;\r",
							"pm.test(\"Check salary response = salary request\", function() {\r",
							"    pm.expect(salary_resp).to.eql(750)\r",
							"});\r",
							"\r",
							"//7. Спарсить request.\r",
							"\r",
							"let requestbody = request.data;\r",
							"console.log(request);\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"let name_req = requestbody.name; \r",
							"pm.test(\"Check name response =  name from request\", function() {\r",
							"    pm.expect(name_resp).to.eql(name_req)\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"let age_req = requestbody.age;\r",
							"pm.test(\"Check age response = age from request\", function() {\r",
							"    pm.expect(age_resp).to.eql(age_req)\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"\r",
							"let salary_req = +requestbody.salary;\r",
							"pm.test(\"Check salary response = salary from request\", function() {\r",
							"    pm.expect(salary_resp).to.eql(salary_req)\r",
							"});\r",
							"console.log(typeof(salary_req, salary_resp));\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"\r",
							"console.log(response.family);\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"let u_salary_1_5_year_resp = response.family.u_salary_1_5_year;\r",
							"pm.test(\"Check u_salary_1_5_year response = salary from request*4\", function() {\r",
							"    pm.expect(u_salary_1_5_year_resp).to.eql(salary_req*4)\r",
							"});\r",
							"console.log(salary_req*4, typeof(salary_req),u_salary_1_5_year_resp, typeof(u_salary_1_5_year_resp) );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Leonardo",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "750",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": {
				"age": "29",
				"family": {
					"children": [
						[
							"Alex",
							24
						],
						[
							"Kate",
							12
						]
					],
					"u_salary_1_5_year": 3000
				},
				"name": "Leonardo",
				"salary": 750
			}
		}
	],

	"info": {
		"_postman_id": "5716afdc-9ef7-4ca4-92e6-866e5bd8353e",
		"name": "HW_2_EP_3_object_info_3_TESTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18525895"
	},
	"item": [
		{
			"name": "HW_2_EP_3_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"\r",
							"let response = pm.response.json();\r",
							"console.log(response);\r",
							"\r",
							"//4. Спарсить request.\r",
							"\r",
							"let requestparams = pm.request.url.query.toObject();\r",
							"console.log(requestparams);\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"let name_resp = response.name;\r",
							"let name_req = requestparams.name;\r",
							"pm.test(\"Check name response = name request\", function() {\r",
							"    pm.expect(name_resp).to.eql(name_req)\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"let age_resp = response.age;\r",
							"let age_req = requestparams.age;\r",
							"pm.test(\"Check age response = age request\", function() {\r",
							"    pm.expect(age_resp).to.eql(age_req)\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"\r",
							"let salary_resp = response.salary;\r",
							"let salary_req = +requestparams.salary;\r",
							"pm.test(\"Check salary response = salary request\", function() {\r",
							"    pm.expect(salary_resp).to.eql(salary_req)\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"\r",
							"console.log(response.family);\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"\r",
							"pm.test(\"Check property dog have property name\", function() {\r",
							"    pm.expect(response.family.pets.dog).to.have.property('name')\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"\r",
							"pm.test(\"Check property dog have property age\", function() {\r",
							"    pm.expect(response.family.pets.dog).to.property('age')\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"\r",
							"pm.test('Check property name have value Luky', function() {\r",
							"    pm.expect(response.family.pets.dog.name).to.contain('Luky')\r",
							"});\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"\r",
							"pm.test('Check property age have value 4', function() {\r",
							"    pm.expect(response.family.pets.dog.age).to.contain(4) \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Leonid&age=29&salary=800",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Leonid"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "800"
						}
					]
				}
			},
			"response": [{
    "age": "29",
    "family": {
        "children": [
            [
                "Alex",
                24
            ],
            [
                "Kate",
                12
            ]
        ],
        "pets": {
            "cat": {
                "age": 3,
                "name": "Sunny"
            },
            "dog": {
                "age": 4,
                "name": "Luky"
            }
        },
        "u_salary_1_5_year": 3200
    },
    "name": "Leonid",
    "salary": 800
}],
		

	"info": {
		"_postman_id": "bf495223-b0fb-4cc2-8158-d5b163ff32cf",
		"name": "HW_2_EP_4_object_info_4_TESTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18525895"
	},
	"info": {
		"_postman_id": "bf495223-b0fb-4cc2-8158-d5b163ff32cf",
		"name": "HW_2_EP_4_object_info_4_TESTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18525895"
	},
	"item": [
		{
			"name": "HW_2_EP_4_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Check Status code response\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"\r",
							"let request_params = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"let name_resp = response.name;\r",
							"let name_req = request_params.name;\r",
							"pm.test(\"Check name response = name request\", function() {\r",
							"    pm.expect(name_resp).to.eql(name_req)\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"\r",
							"let age_resp = response.age;\r",
							"let age_req = +request_params.age;\r",
							"pm.test('Check age response = age request', function() {\r",
							"    pm.expect(age_resp).to.eql(age_req)\r",
							"});\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"\r",
							"let salary_req = request_params.salary;\r",
							"console.log(\"salary_from_request\" + ' ' + salary_req);\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"\r",
							"let salary_resp = response.salary;\r",
							"console.log(\"salary_from_response\" + ' ' + salary_resp);\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"\r",
							"console.log(\"salary[0] from response\" + ' ' + salary_resp[0]);\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"console.log(\"salary[1] from response\" + ' ' + salary_resp[1]);\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"console.log(\"salary[2] from response\" + ' ' + salary_resp[2]);\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"pm.test('Check salary[0] response = salary request', function() {\r",
							"    pm.expect(salary_resp[0]).to.eql(+salary_req)\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Check salary[1] response = salary request * 2 \", function() {\r",
							"    pm.expect(+salary_resp[1]).to.eql(salary_req*2)\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Check salary[2] response = salary request * 3\", function() {\r",
							"    pm.expect(+salary_resp[2]).to.eql(salary_req*3)\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"\r",
							"pm.environment.get(\"name\");\r",
							"\r",
							"//16. Создать в окружении переменную age\r",
							"\r",
							"pm.environment.get(\"age\");\r",
							"\r",
							"//17. Создать в окружении переменную salary\r",
							"\r",
							"pm.environment.get(\"salary\");\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"\r",
							"pm.environment.set('name', name_req);\r",
							"\r",
							"//19. Передать в окружение переменную age\r",
							"\r",
							"pm.environment.set('age', age_req);\r",
							"\r",
							"//20. Передать в окружение переменную salary\r",
							"\r",
							"pm.environment.set('salary', salary_req);\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"for(item of salary_resp){\r",
							"    console.log('salary =',item)\r",
							"};\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Leonid&age=29&salary=800",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Leonid"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "800"
						}
					]
				}
			},
			"response": {
				"age": 29,
				"name": "Leonid",
				"salary": [
					800,
					"1600",
					"2400"
				]
			}
		}
	],
	
	{
		"info": {
			"_postman_id": "1b42141d-89d8-4422-bbfc-7d873983505e",
			"name": "HW_2_EP_5_user_info_2_TESTS",
			"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
			"_exporter_id": "18525895"
		},
		"item": [
			{
				"name": "HW_2_EP_5_user_info_2",
				"event": [
					{
						"listen": "test",
						"script": {
							"exec": [
								"//1. Вставить параметр salary из окружения в request\r",
								"//2. Вставить параметр age из окружения в age\r",
								"//3. Вставить параметр name из окружения в name\r",
								"//4. Отправить запрос.\r",
								"//5. Статус код 200\r",
								"\r",
								"pm.test(\"Status code is 200\", function() {\r",
								"    pm.response.to.have.status(200)\r",
								"});\r",
								"\r",
								"//6. Спарсить response body в json.\r",
								"\t\r",
								"let response = pm.response.json();\r",
								"\r",
								"//7. Спарсить request.\r",
								"\r",
								"let request_body = request.data;\r",
								"\r",
								"//8. Проверить, что json response имеет параметр start_qa_salary\r",
								"\t\t\t\t\t\t\t\r",
								"pm.test(\"Check response have property start_qa_salary\", function() {\r",
								"\tpm.expect(response).to.have.property('start_qa_salary')\r",
								"});\r",
								"\r",
								"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
								"\r",
								"pm.test(\"Check response have property qa_salary_after_6_months\", function() {\r",
								"\tpm.expect(response).to.have.property(\"qa_salary_after_6_months\")\r",
								"});\r",
								"\r",
								"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
								"\r",
								"pm.test(\"Check response have property qa_salary_after_12_months\", function() {\r",
								"\tpm.expect(response).to.have.property(\"qa_salary_after_12_months\")\r",
								"});\r",
								"\r",
								"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
								"\r",
								"pm.test(\"Check response have property qa_salary_after_1.5_year\", function() {\r",
								"\tpm.expect(response).to.have.property(\"qa_salary_after_1.5_year\")\r",
								"});\r",
								"\r",
								"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
								"\r",
								"pm.test(\"Check response have property qa_salary_after_3.5_years\", function() {\r",
								"    pm.expect(response).to.have.property(\"qa_salary_after_3.5_years\")\r",
								"});\r",
								"\r",
								"//13. Проверить, что json response имеет параметр person\r",
								"\r",
								"pm.test(\"Check response have property person\", function() {\r",
								"\tpm.expect(response).to.have.property(\"person\")\r",
								"});\r",
								"\r",
								"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
								"\r",
								"let salary_req = request_body.salary;\r",
								"let start_qa_salary = response.start_qa_salary;\r",
								"pm.test(\"Check start_qa_salary response = salary request\", function() {\r",
								"\tpm.expect(start_qa_salary).to.eql(+salary_req)\r",
								"});\r",
								"\r",
								"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из req(salary забрать из request.)\r",
								"\r",
								"let qa_salary_after_6_months = response.qa_salary_after_6_months;\r",
								"pm.test(\"Check qa_salary_after_6_months response = salary request * 2\", function() {\r",
								"\tpm.expect(qa_salary_after_6_months).to.eql(salary_req*2)\r",
								"});\r",
								"\r",
								"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
								"\r",
								"let qa_salary_after_12_months = response.qa_salary_after_12_months;\r",
								"\tpm.test(\"Check qa_salary_after_12_months response = salary request * 2.7\",function() {\r",
								"            pm.expect(qa_salary_after_12_months).to.eql(salary_req*2.7)\r",
								"});\r",
								"\r",
								"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
								"\r",
								"let qa_salary_after_1_5_year = response['qa_salary_after_1.5_year'];\r",
								"pm.test(\"Check qa_salary_after_1_5_year response = salary request * 3.3\", \r",
								"function () {\r",
								"pm.expect(qa_salary_after_1_5_year).to.eql(salary_req*3.3)\r",
								"});\r",
								"\r",
								"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
								"\r",
								"let qa_salary_after_3_5_years = response['qa_salary_after_3.5_years'];\r",
								"pm.test(\"Check qa_salary_after_3.5_years resp = salary req * 3.8\", function() {\r",
								"\tpm.expect(qa_salary_after_3_5_years).to.eql(salary_req*3.8)\r",
								"});\r",
								"\r",
								"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
								"\t\t\t\t\t\t\t\r",
								"let per_u_name_1 = response.person.u_name[1];\r",
								"pm.test(\"Check per_u_name_1 = salary request\", function() {\r",
								"pm.expect(per_u_name_1).to.eql(+salary_req)\r",
								"});\r",
								"\r",
								"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
								"\r",
								"let u_age = response.person.u_age;\r",
								"let age_req = +request_body.age;\r",
								"pm.test(\"Check u_age response = age request\", function() {\r",
								"pm.expect(u_age).to.eql(age_req)\r",
								"});\r",
								"\r",
								"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
								"\r",
								"let u_salary_5_years = response.person.u_salary_5_years;\r",
								"pm.test(\"Check u_salary_5_years response = salary request*4.2\", function() {\r",
								"pm.expect(u_salary_5_years).to.eql(salary_req*4.2)\r",
								"});\r",
								"\r",
								"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\"\r",
								"\r",
								"let person = response.person;\r",
								"for(let item in person){\r",
								"    console.log(item+'='+' ' +person[item])\r",
								"};\r",
								"\r",
								"\r",
								"\r",
								""
							],
							"type": "text/javascript"
						}
					}
				],
				"request": {
					"method": "POST",
					"header": [],
					"body": {
						"mode": "formdata",
						"formdata": [
							{
								"key": "name",
								"value": "Bolboa",
								"type": "text"
							},
							{
								"key": "age",
								"value": "30",
								"type": "text"
							},
							{
								"key": "salary",
								"value": "20000",
								"type": "text"
							}
						]
					},
					"url": {
						"raw": "http://162.55.220.72:5005/user_info_2",
						"protocol": "http",
						"host": [
							"162",
							"55",
							"220",
							"72"
						],
						"port": "5005",
						"path": [
							"user_info_2"
						]
					}
				},
				"response": {
					"person": {
						"u_age": 30,
						"u_name": [
							"Bolboa",
							20000,
							30
						],
						"u_salary_5_years": 84000.0
					},
					"qa_salary_after_1.5_year": 66000.0,
					"qa_salary_after_12_months": 54000.0,
					"qa_salary_after_3.5_years": 76000.0,
					"qa_salary_after_6_months": 40000,
					"start_qa_salary": 20000
				}
			}
		]
	}
}